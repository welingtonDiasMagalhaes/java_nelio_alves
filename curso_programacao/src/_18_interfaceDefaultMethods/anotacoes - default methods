Default methods (defender methods)
• A partir do Java 8, interfaces podem conter métodos concretos.
• A intenção básica é prover implementação padrão para métodos, de modo a evitar:
	• 1) repetição de implementação em toda classe que implemente a interface
	• 2) a necessidade de se criar classes abstratas para prover reuso da implementação
• Outras vantagens:
	• Manter a retrocompatibilidade com sistemas existentes
	• Permitir que "interfaces funcionais" (que devem conter apenas um método) possam prover outras operações padrão reutilizáveis
	
	
ex:
public interface InterestService {
	double getInterestRate();

	default double payment(double amount, int months) {
		if(months < 1) throw new InvalidParameterException("months must be greater than zero");
		return amount * Math.pow(1.0 + this.getInterestRate() /100, months);
	}
}